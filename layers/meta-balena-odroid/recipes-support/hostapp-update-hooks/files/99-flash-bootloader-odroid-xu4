#!/bin/sh

#
# Script used by hostapps updater to flash bootloader onto internal media
#

set -o errexit

# machine specific data
bl1_file="bl1.bin.hardkernel"
bl1_block_size=512
bl1_seek_blocks=1

bl2_file="bl2.bin.hardkernel"
bl2_block_size=512
bl2_seek_blocks=31

uboot_file="u-boot-odroid-xu4.bin"
uboot_block_size=512
uboot_seek_blocks=63

tzsw_file="tzsw.bin.hardkernel"
tzsw_block_size=512
tzsw_seek_blocks=1503

device="/dev/"$(findmnt --noheadings --canonicalize --output SOURCE /mnt/boot/ | xargs lsblk -no pkname)

update_files="bl1 bl2 uboot tzsw"

for i in $update_files; do
	current_update_file=$(eval echo \$${i}_file)
	block_size=$(eval echo \$${i}_block_size)
	seek_blocks=$(eval echo \$${i}_seek_blocks)

	# calculate size and md5sum of the binary to update from the update bundle
	update_size=$(ls -al /resin-boot/$current_update_file | awk '{print $5}')
	update_md5sum=$(md5sum /resin-boot/$current_update_file | awk '{print $1'})

	# calculate number of bytes to skip when computing the checksum of the data we want to update (i.e. the data already written to $device)
	let skip_bytes=$block_size*$seek_blocks

	# calculate md5sum of the data already written to $device, using $update_size bytes and skipping $skip_bytes from $device
	existing_md5sum=$(dd if=$device skip=$skip_bytes bs=1 count=$update_size status=none | md5sum | awk '{print $1}')

	if [ ! "$existing_md5sum" = "$update_md5sum" ]; then
		echo "Flashing $current_update_file to $device"
		dd if=/resin-boot/$current_update_file of=$device conv=fdatasync seek=$seek_blocks bs=$block_size
	fi
done
